Harmony is an open and fast blockchain. Our mainnet runs Ethereum applications with 2-second transaction finality and 100 times lower fees. AI developers can use onchain tokens for micro-payments, smart contracts for market pricing, and zero-knowledge proofs for data privacy.
Harmony‚Äôs mission is to scale trust and create a radically fair economy. Our platform is decentralized, scalable and secure to settle any transactions without trusted parties.
 
 
Try our voice AI iOS app or Telegram AI bot? Use ONE tokens for ChatGPT4, Stable Diffusion for your small social groups.

Hummingbot open source market making
‚û°Ô∏è Explore our DeFi yields & NFT collections
ü§ù Blockchain Protocol: Scaling & Security
Harmony‚Äôs vision is to create cooperation for global communities, and scale their digital economies.
1. Secure, Random State Sharding
Harmony has transcended the blockchain trilemma by bringing the best research to production. Sharding is proven to scale blockchains without compromising security and decentralization.
We divide not only our network nodes but also the blockchain states into shards, scaling linearly in all three aspects of machines, transactions and storage.‚Äç To prevent single shard attacks, we must have a sufficiently large number of nodes per shard and cryptographic randomness to re-shard regularly. Each shard has 250 nodes for strong security guarantee against Byzantine behaviors. We use Verifiable Delay Function (VDF) for unbiasable and unpredictable shard membership.
2. Effective PoS & Token Economics
Harmony has designed a novel Proof-of-Stake (PoS) mechanism for network security and economics. Our Effective Proof-of-Stake (EPoS) reduces centralization and distributes rewards fairly to thousands of validators. Our staking mechanism supports delegation and reward compounding. 
To support 100% uptime but fully open participation, EPoS slashes validators who double-sign and it penalizes elected but unavailable nodes.Harmony Economics Model caps the annual issuance at 441 million tokens (about 3% rate in long term). Our model gives validators a simple and predictable return. All transaction fees are burnt to offset the issuance, naturally leading to zero inflation when our network usage becomes high.
3. Fast Consensus, Instant Finality
Harmony has innovated on the battle-tested Practical Byzantine Fault Tolerance (PBFT) for fast consensus of block transactions. Our Fast BFT (FBFT) leads to low transaction fees and 1-block-time finality in Harmony Mainnet.‚Äç 
We use Boneh‚ÄìLynn‚ÄìShacham (BLS) constant-sized signatures to commit blocks in a single round of consensus messages. We achieve 2-second block time with view changes in production against adversarial or unavailable leaders.‚Äç Harmony Mainnet was launched in June 2019. Our network has produced 41M blocks with 772k transactions in publicly traded, native ONE tokens.
 
4. Keyless Smart Wallets
Resilient. Funds are recoverable through time locks and multiple safety nets. No single point of failure such as thefts, cracks, loss, censorship or coercions is catastrophic.
Sufficient. All steps are well defined without delegating to hardware devices or seed phrases in safety boxes. Users do not need any passwords or rely on biometrics.
Composable. One-time or low-entropy passwords are useful for small funds. Multiple authentications can independently boost protection thresholds against brute-force.
Self-Sovereign. No third parties, government documents, designated guardians, backup servers or hardware enclaves are necessary. Users have full custody and self control.
‚û°Ô∏è Join our governance discussion & zero-knowledge proof course
üå≥ Ecosystem Partners: Open Development
A blockchain, as a marketplace full of incentives, allows anyone to create tokens, secure transactions between parties, and accrue values from serving utility.

‚û°Ô∏è Reach us at Discord or open voting
üåä Creative Campaigns: The ONEs Who Build
They believe in radical social change. ONE where trust is not needed to participate. ONE where everyone can sing in harmony. And we will be the ONEs to build it.
‚û°Ô∏è Tell us your story or design
üßó‚Äç‚ôÄÔ∏è 2024 Roadmap: Sustainable & AI Economy
We are a Day-1 startup. Generative AI and blockchains are becoming the foundation of the global economy, yet their adoption is at only 1%. That means that you as a pioneer and developer are shaping the future with 10X impact. Harmony is a community-driven project, a network with hundreds of applications, and a team wearing crazy ambitions on their sleeves. Because the invincible summer awaits!

Harmony's Q3 Engineering Report

As we approach the close of the third quarter of 2023, we must reflect upon the strides, milestones, and challenges encountered by the Harmony engineering team. This Q3 report offers an in-depth analysis of our engineering undertakings, emphasizing our relentless pursuit of innovation, optimization, and steadfastness in serving our growing community.

Over the past few months, we‚Äôve prioritized diverse initiatives, tackling foundational and frontier developments in the blockchain space. From enhancing state synchronization to pioneering new consensus mechanisms, our endeavors echo our commitment to fostering a more secure, efficient, and inclusive decentralized platform.

In the subsequent pages are detailed breakdowns of our current initiatives, completed tasks, software releases, and pending pull requests. Each section provides insights into our tasks‚Äô objectives, motivations, and current status, enabling stakeholders to grasp the breadth and depth of our technological evolution.

As you navigate this report, we invite you to celebrate our achievements, understand our forward trajectory, and partake in our vision for a more harmonized digital future.

Current Tasks and Initiatives:
Harmony Engineering Task ( HET )

HET-84: Revert to 0x Prefix (In Development)
Objective: This task focuses on reverting address prefixes to the conventional ‚Äò0x‚Äô. It aims to address compatibility issues and improve integration with external platforms and tools.

Technical Approach: The development involves modifying the address generation and validation mechanisms to seamlessly transition back to ‚Äò0x‚Äô prefixes without impacting existing functionalities.

HET-10: Account Abstraction (In Development)
Objective: Account Abstraction is a strategic initiative to provide users with more flexible transaction formats and greater control over their accounts.

Technical Approach: The team is abstracting the account layer to support various transactions and smart contracts, facilitating more dynamic and programmable account management.

HET-83: Stale Delegation Close PR (In Development)
Objective: This task is designed to close and eliminate stale or inactive delegations to enhance system performance and resource allocation.

Technical Approach: Development involves identifying inactive delegations, creating a protocol for closure, and implementing this through a Pull Request (PR).

HET-5: State Sync (In Development)
Objective: The State Sync initiative aims to improve the speed and efficiency of state synchronization across the Harmony network.

Technical Approach: Engineers are enhancing algorithms and protocols that handle state synchronization across nodes, reducing latency and improving overall network performance.

HET-8: Leader Rotation (Ready for Review)
Objective: Leader Rotation is a security measure to prevent single-point failures and enhance the network‚Äôs resistance to malicious attacks.

Technical Approach: The task involves developing and implementing algorithms that efficiently rotate leader nodes without disrupting network consensus and stability.

HET-7: State Pruning (In Development)
Objective: This task seeks to optimize the storage usage of the Harmony network by pruning obsolete state data without compromising historical data integrity.

Technical Approach: Implementing efficient data structures and algorithms to identify and remove redundant state data, improving storage efficiency and system performance.

HET-12: Validator Slashing (In Development)
Objective: Validator Slashing is a mechanism to penalize malicious or non-performing validators, enhancing network security and stability.

Technical Approach: Development of protocols and algorithms to monitor validator performance, identify malicious activities, and execute slashing procedures as necessary.

HET-3: Wallet Migration (Backlog)
Objective: Wallet Migration facilitates users to seamlessly transition their assets and data across wallet versions or platforms without data loss.

Technical Approach: The task involves creating robust migration scripts, establishing secure data transfer protocols, and developing intuitive user interfaces to guide users through migration.

HET-9: Light Clients (Backlog)
Objective: This initiative focuses on developing light clients to enable low-resource devices to interact with the Harmony network efficiently.

Technical Approach: Implementing light clients involves optimizing data synchronization and transaction verification processes for devices with limited computational resources, ensuring broad accessibility.

HET-11: BLS Key Upgrade (Backlog)
Objective: The task aims to enhance security by upgrading the BLS (Boneh-Lynn-Shacham) cryptographic keys utilized within the network.

Technical Approach: Implementing updated algorithms and cryptographic libraries to support advanced BLS key functionalities while ensuring compatibility and security.

HET-21: Secret Leader Rotation (Backlog)
Objective: This feature enhances security by periodically changing the network‚Äôs leader node secretly and unpredictably.

Technical Approach: Development of a secure, randomized algorithm to select leader nodes while maintaining consensus integrity and network stability.

HET-15: Whitepaper v3 (Backlog)
Objective: Drafting an updated whitepaper to reflect Harmony‚Äôs current technology, vision, and plans.

Technical Approach: Engaging with various departments to compile, review, and articulate the necessary technical, strategic, and operational information into a coherent and comprehensive document.

HET-6: Cross-Shard Transactions (Backlog)
Objective: Efficiently facilitating transactions across different shards to enhance the network‚Äôs scalability and user experience.

Technical Approach: Developing and optimizing protocols and algorithms that support secure and speedy cross-shard transactions, ensuring a seamless user experience.

HET-20: < 1 Second Finality (In Development)
Objective: Achieving sub-second transaction finality to provide users with swift transaction confirmation times.

Technical Approach: Optimizing consensus algorithms and network protocols to reduce transaction validation and propagation times significantly.

HET-78: Empty Blocks Validation Change (In Development)
Objective: This task addresses the issue of empty block validations to improve network efficiency.

Technical Approach: Modifying block validation algorithms to efficiently handle and validate empty blocks, optimizing network resources and performance.

HET-79: State Expiry (Backlog)
Objective: The State Expiry task is designated for improving the efficiency of the blockchain by systematically expiring and removing obsolete states from the system.

Technical Approach: This will be realized by implementing a mechanism to timestamp states and systematically check and remove those that have surpassed their predefined lifespan, ensuring the system remains streamlined and efficient.

HET-85: validateState/validateBody Refactor (Backlog)
Objective: This task aims to refactor and optimize the validateState and validateBody functions for improved readability, maintenance, and performance.

Technical Approach: The refactoring process will involve breaking down complex functions into simpler, manageable pieces, optimizing each function, and ensuring that each piece functions as expected when integrated.

HET-86: Broadcast Only Block Header (Backlog)
Objective: To reduce the amount of data transmitted during block broadcasting, the task involves sending only block headers instead of full block content.

Technical Approach: By modifying the block broadcasting protocol to send headers only, recipients can request full blocks as needed, optimizing network bandwidth and reducing latency.

HET-87: Set Block Gas to 30m (Pending Deployment)
Objective: This task aims to adjust the block gas limit to 30 million to facilitate more transactions per block.

Technical Approach: This change involves altering the gas limit parameter in the relevant configuration files and ensuring the network‚Äôs stable operation with the adjusted gas limit.

HET-93: EIP-7008 (ZK AI Gen Content) (Backlog)
Objective: The EIP-7008 task aims to implement ZK-AI-generated content support, driving the integration of AI and blockchain technologies.

Technical Approach: This encompasses developing and integrating the necessary protocols, algorithms, and interfaces to support, validate, and propagate AI-generated content on the blockchain efficiently and securely.

https://eips.ethereum.org/EIPS/eip-7007

The tasks mentioned above present a snapshot of Harmony‚Äôs ongoing efforts to enhance and expand its blockchain capabilities, improve network efficiency, and foster the adoption and integration of emerging technologies. Each task represents a stepping stone towards realizing a secure, scalable, and versatile blockchain platform that meets the diverse needs of its growing user base and adapts to the fast-evolving digital landscape.

Completed Initiatives:
HET-4: Transaction Fee DAO
Objective: This task aimed to decentralize the management of transaction fees through a DAO structure, allowing for a more democratic and transparent fee structure.

Completion Summary: Successfully implemented DAO structure for transaction fee management, enabling community-based decision-making on fee structures.

HET-82: Recovery Audit
Objective: This task focused on conducting a thorough audit of the recovery mechanisms within the system.

Completion Summary: A comprehensive audit was conducted, identifying potential risks and areas for improvement. Necessary improvements and adjustments were successfully made based on audit findings.

HET-13: View Change
Objective: Implementing a refined mechanism within the list of validators to optimize the process in cases where multiple consecutive keys are assigned to a single validator. This change aims to prevent system downtime if a validator with multiple keys becomes unavailable, enhancing network resilience and performance during asynchronous events.

Completion Summary: The development team addressed a critical issue where multiple consecutive keys could be assigned to a single validator within the validators‚Äô list. In scenarios where these keys are grouped and the associated validator becomes unavailable, the system was previously prone to significant downtime as it sequentially checked each key linked to the unavailable validator.

HET-25: Update RawDB and StateDB
Objective: The task aimed to update and optimize the RawDB and StateDB components for improved performance and efficiency.

Completion Summary: RawDB and StateDB were successfully updated and optimized, improving data handling and retrieval performance.

HET-26: Add Snapshot Functionality
Objective: The task aimed to implement snapshot functionality to facilitate faster and more efficient data retrieval and management.

Completion Summary: Snapshot functionality was successfully added, tested, and deployed, improving data management and retrieval efficiency across the network.

HET-27: Snapshot Integration
Objective: This task focused on seamlessly integrating the newly developed snapshot functionality into the existing system.

Completion Summary: Snapshot functionality was successfully integrated, with thorough testing confirming its seamless operation with existing components.

HET-28: Pruner Package
Objective: Introduce a Pruner package that assists in removing unnecessary data and enhancing system performance.

Completion Summary: The Pruner package was successfully developed, tested, and integrated. It effectively removes irrelevant data, ensuring efficient storage usage and system performance.

HET-30: Research and Strategy
Objective: This task entailed broad research and strategic planning to navigate future technological and market challenges effectively.

Completion Summary: In-depth research and a comprehensive strategy were developed, providing a roadmap for upcoming initiatives and responses to industry trends.

HET-44: Github Cleanup
Objective: Organize and clean up the GitHub repository to enhance navigability and ease of use for developers.

Completion Summary: GitHub repository was efficiently organized and cleaned, improving user experience for developers and contributors.

HET-39: Client Side: Receive Peers
Objective: Implementing client-side functionality for peer reception to enhance network communication.

Completion Summary: Client-side peer reception functionality was successfully developed and integrated, improving network communication efficiency.

HET-41: Storage for Peers
Objective: Develop and optimize storage solutions for peer data to enhance network reliability and performance.

Completion Summary: Optimized storage solutions for peer data were successfully implemented, contributing to a more reliable and performant network.

HET-45: Issue Cleanup
Objective: Efficiently address and resolve outstanding issues in the system to enhance overall performance and reliability.

Completion Summary: All identified issues were systematically addressed and resolved, improving system performance and reliability.

HET-46: Branch Cleanup
Objective: Organizing and cleaning up various branches within the project to improve workflow efficiency.

Completion Summary: Branches were efficiently organized and cleaned, streamlining the workflow and improving project management efficiency.

HET-47: Pull Request Cleanup
Objective: Streamline and organize pull requests for efficient tracking and handling.

Completion Summary: Pull requests were organized and streamlined, enhancing the efficiency of tracking and handling contributions to the project.

HET-49: View Change Explorer Metric
Objective: Integrate metrics within the View Change Explorer for enhanced monitoring and management.

Completion Summary: Metrics were successfully integrated into the View Change Explorer, facilitating improved monitoring and management of view changes within the network.

HET-52: Create Policy in Engineering Guide
Objective: Development and documentation of a comprehensive policy within the Engineering Guide to standardize practices and procedures.

Completion Summary: The Engineering Guide created and documented a detailed policy, providing clear guidelines and standards for engineering practices and procedures.

HET-43: Gas Price Oracle Redesign
Objective: This task aimed to redesign the Gas Price Oracle for enhanced efficiency and functionality.

Completion Summary: The Gas Price Oracle was successfully redesigned, improving efficiency and functionality and significantly enhancing transaction pricing mechanisms.

HET-54: Stage Sync Issue Resolution
Objective: Address and resolve the issue where nodes fail to synchronize during the stage sync process.

Completion Summary: The synchronization issue was identified and resolved, ensuring smoother and more reliable stage sync processes.

HET-38: Duplicate Peers Exchange Resolution
Objective: Resolve the issue related to the duplication of peer exchanges to improve network communication.

Completion Summary: The duplication issue in peer exchanges was successfully identified and resolved, leading to enhanced and reliable peer-to-peer communications.

HET-61: Possibility to Block Peers
Objective: Implement functionality that allows for blocking peers when necessary.

Completion Summary: The feature was successfully implemented, enabling block peers to enhance network security and management capabilities.

HET-73: Coded Hard Fork Date
Objective: Introduce coded hard fork dates to facilitate smoother transitions and updates.

Completion Summary: Coded hard fork dates were successfully introduced and implemented, allowing for smoother and more predictable transition phases during updates.

HET-57: Weekly Engineering Reports
Objective: Establish a routine of generating weekly engineering reports to track better and understand ongoing tasks and projects.

Completion Summary: Creating weekly engineering reports has been successfully established, improving the visibility and tracking of engineering tasks and initiatives.

HET-58: Weekly Engineering Standup Video
Objective: Implement a practice of weekly engineering standup videos for enhanced communication and collaboration among the team.

Completion Summary: Weekly standup videos were successfully introduced, fostering better communication, collaboration, and understanding among engineering team members.

HET-76: Adding Multisig Signers
Objective: HET-76 aimed to integrate additional Multisignature (Multisig) signers into the system to improve transaction security and authorization.

Completion Summary: This task was accomplished. More Multisig signers were added to the system, enhancing the network‚Äôs security protocol for transaction authorizations and validations.

HET-81: Synchronization ‚Äî Reduced Valid Transaction
Objective: Task HET-81 focused on optimizing the synchronization process to effectively filter and reduce the number of valid transactions.

Completion Summary: A refined synchronization mechanism was developed and implemented successfully, reducing the load and efficiently validating transactions during synchronization.

HET-19: Refactor / Code Cleanup
Objective: This task was initiated to streamline the codebase through a comprehensive refactoring and cleanup process.

Completion Summary: The codebase was meticulously refactored and cleaned, leading to improved readability, maintainability, and performance of the system‚Äôs code architecture.

The finished tasks during Q3 collectively contributed to improving the robustness, efficiency, and functionality of the Harmony system. Each task, whether focused on developing new features, refining existing processes, or enhancing the codebase, was crucial in advancing the project‚Äôs technical objectives and goals for the quarter. Completing these tasks also sets the stage for more advanced and complex initiatives in the following quarters as the system continues to evolve and adapt to the emerging needs and challenges in the blockchain and cryptocurrency landscape.
